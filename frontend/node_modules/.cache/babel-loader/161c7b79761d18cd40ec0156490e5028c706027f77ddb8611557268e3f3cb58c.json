{"ast":null,"code":"import FlightCard from './FlightCard.vue';\nimport { getAirports, getAirlines, searchFlights } from '../services/api';\nexport default {\n  name: 'FlightSearch',\n  components: {\n    FlightCard\n  },\n  data() {\n    return {\n      departureAirport: '',\n      destinationAirport: '',\n      flightDate: this.getTodayDate(),\n      selectedAirline: '',\n      airports: [],\n      airlines: [],\n      filteredDestinations: [],\n      flights: [],\n      isLoading: false,\n      searchComplete: false,\n      errorMessage: '',\n      popularAirports: [],\n      debugInfo: {\n        apiCallsStatus: {},\n        dataLoaded: false\n      }\n    };\n  },\n  computed: {\n    minDate() {\n      // 設定最小日期為今天\n      return this.getTodayDate();\n    },\n    maxDate() {\n      // 設定最大日期為一年後\n      const date = new Date();\n      date.setFullYear(date.getFullYear() + 1);\n      return date.toISOString().split('T')[0];\n    },\n    canSearch() {\n      return this.departureAirport && this.destinationAirport && this.flightDate;\n    }\n  },\n  async mounted() {\n    console.log('[DEBUG] FlightSearch組件掛載...');\n    await this.fetchInitialData();\n    await this.loadPopularAirports();\n  },\n  methods: {\n    async fetchInitialData() {\n      console.log('[DEBUG] 開始獲取初始資料...');\n      try {\n        // 從API獲取機場和航空公司資料\n        const [airportsData, airlinesData] = await Promise.all([getAirports(), getAirlines()]);\n        console.log('[DEBUG] API返回的機場數據:', airportsData);\n        console.log('[DEBUG] API返回的航空公司數據:', airlinesData);\n        this.airports = airportsData;\n        this.airlines = airlinesData;\n        this.debugInfo.apiCallsStatus = {\n          airports: airportsData.length > 0 ? 'success' : 'empty',\n          airlines: airlinesData.length > 0 ? 'success' : 'empty'\n        };\n        this.debugInfo.dataLoaded = true;\n        console.log('[DEBUG] 初始化完成。機場數量:', this.airports.length, '航空公司數量:', this.airlines.length);\n      } catch (error) {\n        console.error('[ERROR] 無法載入初始資料:', error);\n        this.errorMessage = '無法載入資料，請稍後再試';\n        this.debugInfo.apiCallsStatus = {\n          error: error.message\n        };\n      }\n    },\n    async loadPopularAirports() {\n      console.log('[DEBUG] 加載熱門機場數據...');\n      try {\n        // 嘗試讀取熱門機場配置文件\n        const response = await fetch('/config/airlines_airports.json');\n        if (!response.ok) {\n          throw new Error('無法獲取熱門機場數據');\n        }\n        const data = await response.json();\n        console.log('[DEBUG] 熱門機場配置數據:', data);\n        if (data && data.airports && Array.isArray(data.airports)) {\n          this.popularAirports = data.airports;\n          console.log('[DEBUG] 已加載熱門機場數量:', this.popularAirports.length);\n\n          // 機場數據處理：優先使用API數據，如果API無數據則使用熱門機場列表\n          if (this.airports.length === 0 && this.popularAirports.length > 0) {\n            console.log('[DEBUG] API沒有返回機場數據，使用熱門機場數據...');\n\n            // 為熱門機場創建下拉選單所需的格式\n            const airportNames = {\n              // 台灣機場\n              'TPE': '台灣桃園國際機場',\n              'TSA': '台北松山機場',\n              'KHH': '高雄國際機場',\n              'RMQ': '台中國際機場',\n              'TTT': '台東機場',\n              'KYD': '蘭嶼機場',\n              'KNH': '金門機場',\n              'MZG': '馬公機場',\n              'HUN': '花蓮機場',\n              'GNI': '綠島機場',\n              'MFK': '馬祖北竿機場',\n              'LZN': '馬祖南竿機場',\n              'TNN': '台南機場',\n              'CMJ': '七美機場',\n              'WOT': '望安機場',\n              // 日本熱門機場\n              'HND': '東京羽田機場',\n              'NRT': '東京成田國際機場',\n              'KIX': '大阪關西國際機場',\n              'FUK': '福岡機場',\n              'CTS': '札幌新千歲機場',\n              'NGO': '名古屋中部國際機場',\n              'OKA': '沖繩那霸機場',\n              // 亞洲其他熱門機場\n              'HKG': '香港國際機場',\n              'ICN': '首爾仁川國際機場',\n              'GMP': '首爾金浦國際機場',\n              'PVG': '上海浦東國際機場',\n              'PEK': '北京首都國際機場',\n              'SIN': '新加坡樟宜機場',\n              'BKK': '曼谷素萬那普機場',\n              'MNL': '馬尼拉國際機場'\n            };\n\n            // 將熱門機場代碼轉換為標準格式，含名稱\n            this.airports = this.popularAirports.map(code => ({\n              code,\n              name: airportNames[code] || `${code} 機場` // 如果沒有預設名稱，使用代碼+機場\n            }));\n            console.log('[DEBUG] 轉換後的機場數據:', this.airports);\n          }\n        }\n      } catch (error) {\n        console.error('[ERROR] 無法載入熱門機場數據:', error);\n      }\n    },\n    filterDestinations() {\n      console.log('[DEBUG] 篩選目的地機場，當前出發機場:', this.departureAirport);\n      if (!this.departureAirport) {\n        this.filteredDestinations = [];\n        this.destinationAirport = '';\n        return;\n      }\n\n      // 篩選所有與出發機場不同的機場\n      this.filteredDestinations = this.airports.filter(airport => airport.code !== this.departureAirport);\n      console.log('[DEBUG] 篩選後的目的地機場數量:', this.filteredDestinations.length);\n    },\n    async searchFlights() {\n      this.isLoading = true;\n      this.searchComplete = true;\n      this.errorMessage = '';\n      try {\n        // 調用API搜尋航班\n        const results = await searchFlights({\n          departureAirport: this.departureAirport,\n          destinationAirport: this.destinationAirport,\n          date: this.flightDate,\n          airline: this.selectedAirline\n        });\n        this.flights = results;\n      } catch (error) {\n        console.error('搜尋航班時出錯:', error);\n        this.errorMessage = '搜尋過程中發生錯誤，請稍後再試';\n        this.flights = [];\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    resetForm() {\n      this.departureAirport = '';\n      this.destinationAirport = '';\n      this.flightDate = this.getTodayDate();\n      this.selectedAirline = '';\n      this.flights = [];\n      this.searchComplete = false;\n    },\n    getTodayDate() {\n      return new Date().toISOString().split('T')[0];\n    },\n    getAirportName(code) {\n      const airport = this.airports.find(a => a.code === code);\n      return airport ? airport.name : code;\n    },\n    getAirlineName(id) {\n      const airline = this.airlines.find(a => a.id === id);\n      return airline ? airline.name : id;\n    },\n    formatDateTime(dateTimeStr) {\n      const date = new Date(dateTimeStr);\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    }\n  }\n};","map":{"version":3,"names":["FlightCard","getAirports","getAirlines","searchFlights","name","components","data","departureAirport","destinationAirport","flightDate","getTodayDate","selectedAirline","airports","airlines","filteredDestinations","flights","isLoading","searchComplete","errorMessage","popularAirports","debugInfo","apiCallsStatus","dataLoaded","computed","minDate","maxDate","date","Date","setFullYear","getFullYear","toISOString","split","canSearch","mounted","console","log","fetchInitialData","loadPopularAirports","methods","airportsData","airlinesData","Promise","all","length","error","message","response","fetch","ok","Error","json","Array","isArray","airportNames","map","code","filterDestinations","filter","airport","results","airline","resetForm","getAirportName","find","a","getAirlineName","id","formatDateTime","dateTimeStr","toLocaleDateString","toLocaleTimeString","hour","minute"],"sources":["C:\\Users\\Aliothouo\\OneDrive\\文件\\學校\\AlphaVision\\AerotwineX\\frontend\\src\\components\\FlightSearch.vue"],"sourcesContent":["<template>\n  <div class=\"flight-search\">\n    <div class=\"header\">\n      <h1>AerotwineX 航班查詢</h1>\n      <p>簡單、快速地查詢您的航班</p>\n    </div>\n    \n    <div class=\"search-container\">\n      <div class=\"search-form\">\n        <div class=\"form-group\">\n          <label>出發地</label>\n          <select v-model=\"departureAirport\" @change=\"filterDestinations\">\n            <option value=\"\">請選擇出發機場</option>\n            <option v-for=\"airport in airports\" :key=\"airport.code\" :value=\"airport.code\">\n              {{ airport.name }} ({{ airport.code }})\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>目的地</label>\n          <select v-model=\"destinationAirport\" :disabled=\"!departureAirport\">\n            <option value=\"\">請選擇目的機場</option>\n            <option v-for=\"airport in filteredDestinations\" :key=\"airport.code\" :value=\"airport.code\">\n              {{ airport.name }} ({{ airport.code }})\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"form-group\">\n          <label>日期</label>\n          <input type=\"date\" v-model=\"flightDate\" :min=\"minDate\" :max=\"maxDate\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label>航空公司</label>\n          <select v-model=\"selectedAirline\">\n            <option value=\"\">所有航空公司</option>\n            <option v-for=\"airline in airlines\" :key=\"airline.id\" :value=\"airline.id\">\n              {{ airline.name }}\n            </option>\n          </select>\n        </div>\n        \n        <div class=\"action-buttons\">\n          <button class=\"search-button\" @click=\"searchFlights\" :disabled=\"!canSearch\">\n            搜尋航班\n          </button>\n          <button class=\"reset-button\" @click=\"resetForm\">\n            重設\n          </button>\n        </div>\n        \n        <div v-if=\"errorMessage\" class=\"error-message\">\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"search-results\" v-if=\"searchComplete\">\n      <div v-if=\"isLoading\" class=\"loading\">\n        <div class=\"loader\"></div>\n        <p>搜尋中，請稍候...</p>\n      </div>\n      \n      <div v-else>\n        <div class=\"results-header\">\n          <h2>搜尋結果</h2>\n          <p v-if=\"flights.length === 0\">沒有找到符合條件的航班</p>\n          <p v-else>找到 {{ flights.length }} 個符合條件的航班</p>\n        </div>\n        \n        <div class=\"flights-container\" v-if=\"flights.length > 0\">\n          <flight-card \n            v-for=\"flight in flights\" \n            :key=\"`${flight.flight_number}-${flight.scheduled_departure}`\" \n            :flight=\"flight\"\n            :departureAirportName=\"getAirportName(flight.departure_airport_code)\"\n            :arrivalAirportName=\"getAirportName(flight.arrival_airport_code)\"\n            :airlineName=\"getAirlineName(flight.airline_id)\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FlightCard from './FlightCard.vue';\nimport { getAirports, getAirlines, searchFlights } from '../services/api';\n\nexport default {\n  name: 'FlightSearch',\n  components: {\n    FlightCard\n  },\n  data() {\n    return {\n      departureAirport: '',\n      destinationAirport: '',\n      flightDate: this.getTodayDate(),\n      selectedAirline: '',\n      airports: [],\n      airlines: [],\n      filteredDestinations: [],\n      flights: [],\n      isLoading: false,\n      searchComplete: false,\n      errorMessage: '',\n      popularAirports: [],\n      debugInfo: {\n        apiCallsStatus: {},\n        dataLoaded: false\n      }\n    };\n  },\n  computed: {\n    minDate() {\n      // 設定最小日期為今天\n      return this.getTodayDate();\n    },\n    maxDate() {\n      // 設定最大日期為一年後\n      const date = new Date();\n      date.setFullYear(date.getFullYear() + 1);\n      return date.toISOString().split('T')[0];\n    },\n    canSearch() {\n      return this.departureAirport && this.destinationAirport && this.flightDate;\n    }\n  },\n  async mounted() {\n    console.log('[DEBUG] FlightSearch組件掛載...');\n    await this.fetchInitialData();\n    await this.loadPopularAirports();\n  },\n  methods: {\n    async fetchInitialData() {\n      console.log('[DEBUG] 開始獲取初始資料...');\n      try {\n        // 從API獲取機場和航空公司資料\n        const [airportsData, airlinesData] = await Promise.all([\n          getAirports(),\n          getAirlines()\n        ]);\n        \n        console.log('[DEBUG] API返回的機場數據:', airportsData);\n        console.log('[DEBUG] API返回的航空公司數據:', airlinesData);\n        \n        this.airports = airportsData;\n        this.airlines = airlinesData;\n        \n        this.debugInfo.apiCallsStatus = {\n          airports: airportsData.length > 0 ? 'success' : 'empty',\n          airlines: airlinesData.length > 0 ? 'success' : 'empty'\n        };\n        this.debugInfo.dataLoaded = true;\n        \n        console.log('[DEBUG] 初始化完成。機場數量:', this.airports.length, '航空公司數量:', this.airlines.length);\n      } catch (error) {\n        console.error('[ERROR] 無法載入初始資料:', error);\n        this.errorMessage = '無法載入資料，請稍後再試';\n        this.debugInfo.apiCallsStatus = {\n          error: error.message\n        };\n      }\n    },\n    \n    async loadPopularAirports() {\n      console.log('[DEBUG] 加載熱門機場數據...');\n      try {\n        // 嘗試讀取熱門機場配置文件\n        const response = await fetch('/config/airlines_airports.json');\n        if (!response.ok) {\n          throw new Error('無法獲取熱門機場數據');\n        }\n        \n        const data = await response.json();\n        console.log('[DEBUG] 熱門機場配置數據:', data);\n        \n        if (data && data.airports && Array.isArray(data.airports)) {\n          this.popularAirports = data.airports;\n          console.log('[DEBUG] 已加載熱門機場數量:', this.popularAirports.length);\n          \n          // 機場數據處理：優先使用API數據，如果API無數據則使用熱門機場列表\n          if (this.airports.length === 0 && this.popularAirports.length > 0) {\n            console.log('[DEBUG] API沒有返回機場數據，使用熱門機場數據...');\n            \n            // 為熱門機場創建下拉選單所需的格式\n            const airportNames = {\n              // 台灣機場\n              'TPE': '台灣桃園國際機場',\n              'TSA': '台北松山機場',\n              'KHH': '高雄國際機場',\n              'RMQ': '台中國際機場',\n              'TTT': '台東機場',\n              'KYD': '蘭嶼機場',\n              'KNH': '金門機場',\n              'MZG': '馬公機場',\n              'HUN': '花蓮機場',\n              'GNI': '綠島機場',\n              'MFK': '馬祖北竿機場',\n              'LZN': '馬祖南竿機場',\n              'TNN': '台南機場',\n              'CMJ': '七美機場',\n              'WOT': '望安機場',\n              \n              // 日本熱門機場\n              'HND': '東京羽田機場',\n              'NRT': '東京成田國際機場',\n              'KIX': '大阪關西國際機場',\n              'FUK': '福岡機場',\n              'CTS': '札幌新千歲機場',\n              'NGO': '名古屋中部國際機場',\n              'OKA': '沖繩那霸機場',\n              \n              // 亞洲其他熱門機場\n              'HKG': '香港國際機場',\n              'ICN': '首爾仁川國際機場',\n              'GMP': '首爾金浦國際機場',\n              'PVG': '上海浦東國際機場',\n              'PEK': '北京首都國際機場',\n              'SIN': '新加坡樟宜機場',\n              'BKK': '曼谷素萬那普機場',\n              'MNL': '馬尼拉國際機場'\n            };\n            \n            // 將熱門機場代碼轉換為標準格式，含名稱\n            this.airports = this.popularAirports.map(code => ({\n              code,\n              name: airportNames[code] || `${code} 機場` // 如果沒有預設名稱，使用代碼+機場\n            }));\n            \n            console.log('[DEBUG] 轉換後的機場數據:', this.airports);\n          }\n        }\n      } catch (error) {\n        console.error('[ERROR] 無法載入熱門機場數據:', error);\n      }\n    },\n    \n    filterDestinations() {\n      console.log('[DEBUG] 篩選目的地機場，當前出發機場:', this.departureAirport);\n      if (!this.departureAirport) {\n        this.filteredDestinations = [];\n        this.destinationAirport = '';\n        return;\n      }\n      \n      // 篩選所有與出發機場不同的機場\n      this.filteredDestinations = this.airports.filter(\n        airport => airport.code !== this.departureAirport\n      );\n      console.log('[DEBUG] 篩選後的目的地機場數量:', this.filteredDestinations.length);\n    },\n    async searchFlights() {\n      this.isLoading = true;\n      this.searchComplete = true;\n      this.errorMessage = '';\n      \n      try {\n        // 調用API搜尋航班\n        const results = await searchFlights({\n          departureAirport: this.departureAirport,\n          destinationAirport: this.destinationAirport,\n          date: this.flightDate,\n          airline: this.selectedAirline\n        });\n        \n        this.flights = results;\n      } catch (error) {\n        console.error('搜尋航班時出錯:', error);\n        this.errorMessage = '搜尋過程中發生錯誤，請稍後再試';\n        this.flights = [];\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    resetForm() {\n      this.departureAirport = '';\n      this.destinationAirport = '';\n      this.flightDate = this.getTodayDate();\n      this.selectedAirline = '';\n      this.flights = [];\n      this.searchComplete = false;\n    },\n    getTodayDate() {\n      return new Date().toISOString().split('T')[0];\n    },\n    getAirportName(code) {\n      const airport = this.airports.find(a => a.code === code);\n      return airport ? airport.name : code;\n    },\n    getAirlineName(id) {\n      const airline = this.airlines.find(a => a.id === id);\n      return airline ? airline.name : id;\n    },\n    formatDateTime(dateTimeStr) {\n      const date = new Date(dateTimeStr);\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}`;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.flight-search {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  color: #333;\n  font-family: 'Arial', sans-serif;\n}\n\n.header {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.header h1 {\n  font-size: 2.5rem;\n  margin-bottom: 0.5rem;\n  font-weight: 300;\n  letter-spacing: 1px;\n}\n\n.header p {\n  font-size: 1.2rem;\n  color: #666;\n}\n\n.search-container {\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  padding: 2rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  margin-bottom: 2rem;\n}\n\n.search-form {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\nlabel {\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  color: #555;\n}\n\nselect, input {\n  padding: 0.8rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  background-color: white;\n  transition: border-color 0.3s;\n}\n\nselect:focus, input:focus {\n  border-color: #333;\n  outline: none;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-top: 1.5rem;\n  grid-column: 1 / -1;\n}\n\nbutton {\n  padding: 0.8rem 1.5rem;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s, transform 0.1s;\n}\n\nbutton:hover {\n  transform: translateY(-2px);\n}\n\n.search-button {\n  background-color: #333;\n  color: white;\n  flex: 2;\n}\n\n.search-button:hover {\n  background-color: #222;\n}\n\n.search-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.reset-button {\n  background-color: #e6e6e6;\n  color: #333;\n  flex: 1;\n}\n\n.reset-button:hover {\n  background-color: #d9d9d9;\n}\n\n.error-message {\n  color: #d32f2f;\n  background-color: #ffebee;\n  padding: 0.8rem;\n  border-radius: 4px;\n  margin-top: 1rem;\n  text-align: center;\n  font-weight: 500;\n  grid-column: 1 / -1;\n}\n\n.search-results {\n  margin-top: 2rem;\n}\n\n.results-header {\n  text-align: center;\n  margin-bottom: 1.5rem;\n}\n\n.results-header h2 {\n  font-size: 1.8rem;\n  font-weight: 300;\n  margin-bottom: 0.5rem;\n}\n\n.loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 3rem 0;\n}\n\n.loader {\n  border: 4px solid #f3f3f3;\n  border-top: 4px solid #333;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  animation: spin 1s linear infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.flights-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n}\n\n@media (max-width: 768px) {\n  .search-form {\n    grid-template-columns: 1fr;\n  }\n  \n  .flights-container {\n    grid-template-columns: 1fr;\n  }\n  \n  .flight-search {\n    padding: 1rem;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}