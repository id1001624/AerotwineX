{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, normalizeClass as _normalizeClass, vShow as _vShow } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flight-search-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-form\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"select-wrapper\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"select-wrapper\"\n};\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = [\"min\"];\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  class: \"select-wrapper\"\n};\nconst _hoisted_13 = [\"value\"];\nconst _hoisted_14 = {\n  class: \"form-group search-button-container\"\n};\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = {\n  key: 1\n};\nconst _hoisted_18 = {\n  class: \"search-results\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"loading-container\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"no-results\"\n};\nconst _hoisted_21 = {\n  key: 2,\n  class: \"results-info\"\n};\nconst _hoisted_22 = {\n  class: \"flight-cards\"\n};\nconst _hoisted_23 = {\n  class: \"flight-card-header\"\n};\nconst _hoisted_24 = {\n  class: \"airline-info\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"airline-logo\"\n};\nconst _hoisted_26 = [\"src\", \"alt\"];\nconst _hoisted_27 = {\n  class: \"airline-name\"\n};\nconst _hoisted_28 = {\n  class: \"flight-number\"\n};\nconst _hoisted_29 = {\n  class: \"flight-card-body\"\n};\nconst _hoisted_30 = {\n  class: \"flight-route\"\n};\nconst _hoisted_31 = {\n  class: \"departure\"\n};\nconst _hoisted_32 = {\n  class: \"airport-name\"\n};\nconst _hoisted_33 = {\n  class: \"flight-duration\"\n};\nconst _hoisted_34 = {\n  class: \"arrival\"\n};\nconst _hoisted_35 = {\n  class: \"airport-name\"\n};\nconst _hoisted_36 = {\n  class: \"flight-card-footer\"\n};\nconst _hoisted_37 = {\n  class: \"flight-details\"\n};\nconst _hoisted_38 = {\n  key: 0\n};\nconst _hoisted_39 = {\n  key: 1\n};\nconst _hoisted_40 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"div\", {\n    class: \"flight-search-header\"\n  }, [_createElementVNode(\"h1\", null, \"航班查詢\"), _createElementVNode(\"p\", null, \"尋找您所需的航班資訊\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 查詢表單 \"), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"departure\"\n  }, \"出發機場\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"departure\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchParams.departure = $event),\n    class: \"form-control\"\n  }, [_cache[5] || (_cache[5] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"選擇出發機場\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.airports, airport => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: airport.airport_id,\n      value: airport.airport_id\n    }, _toDisplayString(airport.airport_name_zh) + \" (\" + _toDisplayString(airport.airport_id) + \") \", 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchParams.departure]])])]), _createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"arrival\"\n  }, \"抵達機場\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"arrival\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchParams.arrival = $event),\n    class: \"form-control\"\n  }, [_cache[7] || (_cache[7] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"選擇抵達機場\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.airports, airport => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: airport.airport_id,\n      value: airport.airport_id\n    }, _toDisplayString(airport.airport_name_zh) + \" (\" + _toDisplayString(airport.airport_id) + \") \", 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchParams.arrival]])])]), _createElementVNode(\"div\", _hoisted_9, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"date\"\n  }, \"日期\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.searchParams.date = $event),\n    class: \"form-control\",\n    min: $data.minDate\n  }, null, 8 /* PROPS */, _hoisted_10), [[_vModelText, $data.searchParams.date]])]), _createElementVNode(\"div\", _hoisted_11, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"airline\"\n  }, \"航空公司\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"select\", {\n    id: \"airline\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.searchParams.airline = $event),\n    class: \"form-control\"\n  }, [_cache[10] || (_cache[10] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"所有航空公司\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.airlines, airline => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: airline.airline_id,\n      value: airline.airline_id\n    }, _toDisplayString(airline.airline_name_zh), 9 /* TEXT, PROPS */, _hoisted_13);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchParams.airline]])])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    class: \"search-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.searchFlights && $options.searchFlights(...args)),\n    disabled: $data.isSearching\n  }, [$data.isSearching ? (_openBlock(), _createElementBlock(\"span\", _hoisted_16, \"搜尋中...\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_17, \"搜尋航班\"))], 8 /* PROPS */, _hoisted_15)])]), _createCommentVNode(\" 搜尋結果 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_18, [$data.isSearching ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _cache[12] || (_cache[12] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"p\", null, \"正在搜尋航班，請稍候...\", -1 /* HOISTED */)]))) : $data.flights.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[13] || (_cache[13] = [_createElementVNode(\"p\", null, \"沒有找到符合條件的航班，請嘗試其他搜尋條件。\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"搜尋結果\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"共找到 \" + _toDisplayString($data.flights.length) + \" 個航班\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.flights, (flight, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"flight-card\"\n    }, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [$options.getAirlineLogo(flight.airline_id) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [_createElementVNode(\"img\", {\n      src: $options.getAirlineLogo(flight.airline_id),\n      alt: $options.getAirlineName(flight.airline_id)\n    }, null, 8 /* PROPS */, _hoisted_26)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", _hoisted_27, _toDisplayString($options.getAirlineName(flight.airline_id)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_28, _toDisplayString(flight.flight_number), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"h3\", null, _toDisplayString($options.getAirportCode(flight.departure_airport_code)), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.formatTime(flight.scheduled_departure)), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_32, _toDisplayString($options.getAirportName(flight.departure_airport_code)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_33, [_cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n      class: \"flight-line\"\n    }, [_createElementVNode(\"div\", {\n      class: \"dot\"\n    }), _createElementVNode(\"div\", {\n      class: \"line\"\n    }), _createElementVNode(\"div\", {\n      class: \"dot\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($options.calculateDuration(flight.scheduled_departure, flight.scheduled_arrival)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"h3\", null, _toDisplayString($options.getAirportCode(flight.arrival_airport_code)), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.formatTime(flight.scheduled_arrival)), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_35, _toDisplayString($options.getAirportName(flight.arrival_airport_code)), 1 /* TEXT */)])]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"flight-status\", $options.getStatusClass(flight.flight_status)])\n    }, _toDisplayString($options.getStatusText(flight.flight_status)), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [flight.aircraft_type ? (_openBlock(), _createElementBlock(\"p\", _hoisted_38, \"機型: \" + _toDisplayString(flight.aircraft_type), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), flight.price ? (_openBlock(), _createElementBlock(\"p\", _hoisted_39, \"票價: NT$ \" + _toDisplayString(flight.price), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), flight.booking_link ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      href: flight.booking_link,\n      target: \"_blank\",\n      class: \"booking-link\"\n    }, \" 訂票 \", 8 /* PROPS */, _hoisted_40)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]))], 512 /* NEED_PATCH */), [[_vShow, $data.hasSearched]])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_hoisted_3","for","_hoisted_4","id","_cache","$event","$data","searchParams","departure","value","_Fragment","_renderList","airports","airport","airport_id","airport_name_zh","_toDisplayString","_hoisted_5","_hoisted_6","_hoisted_7","arrival","_hoisted_8","_hoisted_9","type","date","min","minDate","_hoisted_10","_hoisted_11","_hoisted_12","airline","airlines","airline_id","airline_name_zh","_hoisted_13","_hoisted_14","onClick","args","$options","searchFlights","disabled","isSearching","_hoisted_16","_hoisted_17","_hoisted_15","_hoisted_18","_hoisted_19","flights","length","_hoisted_20","_hoisted_21","_hoisted_22","flight","index","_hoisted_23","_hoisted_24","getAirlineLogo","_hoisted_25","src","alt","getAirlineName","_hoisted_26","_hoisted_27","_hoisted_28","flight_number","_hoisted_29","_hoisted_30","_hoisted_31","getAirportCode","departure_airport_code","formatTime","scheduled_departure","_hoisted_32","getAirportName","_hoisted_33","calculateDuration","scheduled_arrival","_hoisted_34","arrival_airport_code","_hoisted_35","_normalizeClass","getStatusClass","flight_status","getStatusText","_hoisted_36","_hoisted_37","aircraft_type","_hoisted_38","price","_hoisted_39","booking_link","href","target","_hoisted_40","hasSearched"],"sources":["C:\\Users\\Aliothouo\\OneDrive\\文件\\學校\\AlphaVision\\AerotwineX\\frontend\\src\\components\\FlightSearch.vue"],"sourcesContent":["<!-- 航班查詢組件 -->\n<template>\n  <div class=\"flight-search-container\">\n    <div class=\"flight-search-header\">\n      <h1>航班查詢</h1>\n      <p>尋找您所需的航班資訊</p>\n    </div>\n\n    <div class=\"search-form\">\n      <!-- 查詢表單 -->\n      <div class=\"form-group\">\n        <label for=\"departure\">出發機場</label>\n        <div class=\"select-wrapper\">\n          <select id=\"departure\" v-model=\"searchParams.departure\" class=\"form-control\">\n            <option value=\"\">選擇出發機場</option>\n            <option v-for=\"airport in airports\" :key=\"airport.airport_id\" :value=\"airport.airport_id\">\n              {{ airport.airport_name_zh }} ({{ airport.airport_id }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"arrival\">抵達機場</label>\n        <div class=\"select-wrapper\">\n          <select id=\"arrival\" v-model=\"searchParams.arrival\" class=\"form-control\">\n            <option value=\"\">選擇抵達機場</option>\n            <option v-for=\"airport in airports\" :key=\"airport.airport_id\" :value=\"airport.airport_id\">\n              {{ airport.airport_name_zh }} ({{ airport.airport_id }})\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"date\">日期</label>\n        <input \n          type=\"date\" \n          id=\"date\" \n          v-model=\"searchParams.date\" \n          class=\"form-control\"\n          :min=\"minDate\"\n        >\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"airline\">航空公司</label>\n        <div class=\"select-wrapper\">\n          <select id=\"airline\" v-model=\"searchParams.airline\" class=\"form-control\">\n            <option value=\"\">所有航空公司</option>\n            <option v-for=\"airline in airlines\" :key=\"airline.airline_id\" :value=\"airline.airline_id\">\n              {{ airline.airline_name_zh }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"form-group search-button-container\">\n        <button class=\"search-button\" @click=\"searchFlights\" :disabled=\"isSearching\">\n          <span v-if=\"isSearching\">搜尋中...</span>\n          <span v-else>搜尋航班</span>\n        </button>\n      </div>\n    </div>\n\n    <!-- 搜尋結果 -->\n    <div class=\"search-results\" v-show=\"hasSearched\">\n      <div v-if=\"isSearching\" class=\"loading-container\">\n        <div class=\"loading-spinner\"></div>\n        <p>正在搜尋航班，請稍候...</p>\n      </div>\n      \n      <div v-else-if=\"flights.length === 0\" class=\"no-results\">\n        <p>沒有找到符合條件的航班，請嘗試其他搜尋條件。</p>\n      </div>\n      \n      <div v-else class=\"results-info\">\n        <h2>搜尋結果</h2>\n        <p>共找到 {{ flights.length }} 個航班</p>\n        \n        <div class=\"flight-cards\">\n          <div v-for=\"(flight, index) in flights\" :key=\"index\" class=\"flight-card\">\n            <div class=\"flight-card-header\">\n              <div class=\"airline-info\">\n                <span class=\"airline-logo\" v-if=\"getAirlineLogo(flight.airline_id)\">\n                  <img :src=\"getAirlineLogo(flight.airline_id)\" :alt=\"getAirlineName(flight.airline_id)\">\n                </span>\n                <span class=\"airline-name\">{{ getAirlineName(flight.airline_id) }}</span>\n              </div>\n              <div class=\"flight-number\">{{ flight.flight_number }}</div>\n            </div>\n            \n            <div class=\"flight-card-body\">\n              <div class=\"flight-route\">\n                <div class=\"departure\">\n                  <h3>{{ getAirportCode(flight.departure_airport_code) }}</h3>\n                  <p>{{ formatTime(flight.scheduled_departure) }}</p>\n                  <p class=\"airport-name\">{{ getAirportName(flight.departure_airport_code) }}</p>\n                </div>\n                \n                <div class=\"flight-duration\">\n                  <div class=\"flight-line\">\n                    <div class=\"dot\"></div>\n                    <div class=\"line\"></div>\n                    <div class=\"dot\"></div>\n                  </div>\n                  <p>{{ calculateDuration(flight.scheduled_departure, flight.scheduled_arrival) }}</p>\n                </div>\n                \n                <div class=\"arrival\">\n                  <h3>{{ getAirportCode(flight.arrival_airport_code) }}</h3>\n                  <p>{{ formatTime(flight.scheduled_arrival) }}</p>\n                  <p class=\"airport-name\">{{ getAirportName(flight.arrival_airport_code) }}</p>\n                </div>\n              </div>\n              \n              <div class=\"flight-status\" :class=\"getStatusClass(flight.flight_status)\">\n                {{ getStatusText(flight.flight_status) }}\n              </div>\n            </div>\n            \n            <div class=\"flight-card-footer\">\n              <div class=\"flight-details\">\n                <p v-if=\"flight.aircraft_type\">機型: {{ flight.aircraft_type }}</p>\n                <p v-if=\"flight.price\">票價: NT$ {{ flight.price }}</p>\n              </div>\n              <a v-if=\"flight.booking_link\" :href=\"flight.booking_link\" target=\"_blank\" class=\"booking-link\">\n                訂票\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FlightSearch',\n  data() {\n    return {\n      airports: [],\n      airlines: [],\n      flights: [],\n      searchParams: {\n        departure: '',\n        arrival: '',\n        date: new Date().toISOString().split('T')[0],\n        airline: ''\n      },\n      isSearching: false,\n      hasSearched: false,\n      minDate: new Date().toISOString().split('T')[0]\n    }\n  },\n  async created() {\n    await this.fetchAirports();\n    await this.fetchAirlines();\n  },\n  methods: {\n    // 獲取機場資料\n    async fetchAirports() {\n      try {\n        // 模擬API回應\n        this.airports = [\n          { airport_id: 'TPE', airport_name_zh: '桃園國際機場', airport_name_en: 'Taiwan Taoyuan International Airport', city_zh: '台北', country: 'Taiwan' },\n          { airport_id: 'TSA', airport_name_zh: '台北松山機場', airport_name_en: 'Taipei Songshan Airport', city_zh: '台北', country: 'Taiwan' },\n          { airport_id: 'KHH', airport_name_zh: '高雄國際機場', airport_name_en: 'Kaohsiung International Airport', city_zh: '高雄', country: 'Taiwan' },\n          { airport_id: 'HKG', airport_name_zh: '香港國際機場', airport_name_en: 'Hong Kong International Airport', city_zh: '香港', country: 'Hong Kong' },\n          { airport_id: 'NRT', airport_name_zh: '成田國際機場', airport_name_en: 'Narita International Airport', city_zh: '東京', country: 'Japan' },\n          { airport_id: 'KIX', airport_name_zh: '關西國際機場', airport_name_en: 'Kansai International Airport', city_zh: '大阪', country: 'Japan' },\n          { airport_id: 'ICN', airport_name_zh: '仁川國際機場', airport_name_en: 'Incheon International Airport', city_zh: '首爾', country: 'South Korea' },\n          { airport_id: 'BKK', airport_name_zh: '曼谷素萬那普機場', airport_name_en: 'Suvarnabhumi Airport', city_zh: '曼谷', country: 'Thailand' },\n          { airport_id: 'SIN', airport_name_zh: '新加坡樟宜機場', airport_name_en: 'Singapore Changi Airport', city_zh: '新加坡', country: 'Singapore' },\n          { airport_id: 'KNH', airport_name_zh: '金門尚義機場', airport_name_en: 'Kinmen Airport', city_zh: '金門', country: 'Taiwan' },\n          { airport_id: 'MZG', airport_name_zh: '馬公機場', airport_name_en: 'Magong Airport', city_zh: '澎湖', country: 'Taiwan' },\n          { airport_id: 'TTT', airport_name_zh: '台東機場', airport_name_en: 'Taitung Airport', city_zh: '台東', country: 'Taiwan' },\n          { airport_id: 'KYD', airport_name_zh: '蘭嶼機場', airport_name_en: 'Lanyu Airport', city_zh: '蘭嶼', country: 'Taiwan' }\n        ];\n      } catch (error) {\n        console.error('獲取機場資料失敗:', error);\n      }\n    },\n    \n    // 獲取航空公司資料\n    async fetchAirlines() {\n      try {\n        // 模擬API回應\n        this.airlines = [\n          { airline_id: 'CI', airline_name_zh: '中華航空', airline_name_en: 'China Airlines', logo_url: 'https://upload.wikimedia.org/wikipedia/zh/a/aa/China_Airlines_Logo.svg' },\n          { airline_id: 'BR', airline_name_zh: '長榮航空', airline_name_en: 'EVA Air', logo_url: 'https://upload.wikimedia.org/wikipedia/zh/9/9c/EVA_Air_Logo.svg' },\n          { airline_id: 'AE', airline_name_zh: '華信航空', airline_name_en: 'Mandarin Airlines', logo_url: 'https://upload.wikimedia.org/wikipedia/commons/2/2c/Mandarin_Airlines_logo_since_2005.svg' },\n          { airline_id: 'B7', airline_name_zh: '立榮航空', airline_name_en: 'UNI Airways', logo_url: 'https://upload.wikimedia.org/wikipedia/commons/1/18/Uni_Airways_Logo.svg' },\n          { airline_id: 'DA', airline_name_zh: '德安航空', airline_name_en: 'Daily Air', logo_url: 'https://www.dailyair.com.tw/wedassets/image/logo-1.png' },\n          { airline_id: 'CX', airline_name_zh: '國泰航空', airline_name_en: 'Cathay Pacific', logo_url: 'https://upload.wikimedia.org/wikipedia/zh/0/00/Cathay_Pacific_Logo.svg' },\n          { airline_id: 'JL', airline_name_zh: '日本航空', airline_name_en: 'Japan Airlines', logo_url: 'https://upload.wikimedia.org/wikipedia/zh/a/a3/Japan_Airlines_Logo_%282011%29.svg' },\n          { airline_id: 'KE', airline_name_zh: '大韓航空', airline_name_en: 'Korean Air', logo_url: 'https://upload.wikimedia.org/wikipedia/zh/e/e4/Korean_Air_Logo.svg' },\n          { airline_id: 'TG', airline_name_zh: '泰國航空', airline_name_en: 'Thai Airways', logo_url: 'https://upload.wikimedia.org/wikipedia/zh/b/b3/THAI_Logo.svg' }\n        ];\n      } catch (error) {\n        console.error('獲取航空公司資料失敗:', error);\n      }\n    },\n    \n    // 搜尋航班\n    async searchFlights() {\n      if (!this.searchParams.departure || !this.searchParams.arrival || !this.searchParams.date) {\n        alert('請填寫出發機場、抵達機場和日期');\n        return;\n      }\n      \n      this.isSearching = true;\n      this.hasSearched = true;\n      \n      try {\n        // 模擬API請求\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        \n        // 模擬響應數據\n        const departureDate = new Date(this.searchParams.date);\n        \n        // 創建模擬航班數據\n        this.flights = this.generateMockFlights(\n          this.searchParams.departure,\n          this.searchParams.arrival,\n          departureDate,\n          this.searchParams.airline\n        );\n      } catch (error) {\n        console.error('搜尋航班失敗:', error);\n        this.flights = [];\n      } finally {\n        this.isSearching = false;\n      }\n    },\n    \n    // 產生模擬航班數據\n    generateMockFlights(departure, arrival, date, airline = '') {\n      const flights = [];\n      const airlines = airline ? [airline] : ['CI', 'BR', 'AE', 'B7', 'DA'];\n      const randomAirlines = airline ? [airline] : airlines.sort(() => 0.5 - Math.random()).slice(0, Math.floor(Math.random() * 3) + 1);\n      \n      for (const airlineId of randomAirlines) {\n        const flightCount = Math.floor(Math.random() * 3) + 1;\n        \n        for (let i = 0; i < flightCount; i++) {\n          const flightNumber = `${airlineId}${Math.floor(Math.random() * 1000) + 100}`;\n          const departureHour = 6 + Math.floor(Math.random() * 14);\n          const departureMin = Math.floor(Math.random() * 60);\n          \n          const scheduledDeparture = new Date(date);\n          scheduledDeparture.setHours(departureHour, departureMin, 0);\n          \n          const durationMin = 30 + Math.floor(Math.random() * 120);\n          const scheduledArrival = new Date(scheduledDeparture.getTime() + durationMin * 60000);\n          \n          const statuses = ['on_time', 'on_time', 'on_time', 'on_time', 'delayed', 'cancelled'];\n          const status = statuses[Math.floor(Math.random() * statuses.length)];\n          \n          const aircraft = ['A321', 'B737', 'A320', 'ATR72', 'DHC-6'];\n          const price = Math.floor(Math.random() * 5000) + 2000;\n          \n          flights.push({\n            flight_number: flightNumber,\n            airline_id: airlineId,\n            departure_airport_code: departure,\n            arrival_airport_code: arrival,\n            scheduled_departure: scheduledDeparture,\n            scheduled_arrival: scheduledArrival,\n            flight_status: status,\n            aircraft_type: aircraft[Math.floor(Math.random() * aircraft.length)],\n            price: Math.random() > 0.3 ? price : null,\n            booking_link: Math.random() > 0.5 ? '#' : null\n          });\n        }\n      }\n      \n      return flights.sort((a, b) => a.scheduled_departure - b.scheduled_departure);\n    },\n    \n    // 獲取航空公司名稱\n    getAirlineName(airlineId) {\n      const airline = this.airlines.find(a => a.airline_id === airlineId);\n      return airline ? airline.airline_name_zh : airlineId;\n    },\n    \n    // 獲取航空公司標誌\n    getAirlineLogo(airlineId) {\n      const airline = this.airlines.find(a => a.airline_id === airlineId);\n      return airline ? airline.logo_url : null;\n    },\n    \n    // 獲取機場代碼\n    getAirportCode(airportId) {\n      return airportId;\n    },\n    \n    // 獲取機場名稱\n    getAirportName(airportId) {\n      const airport = this.airports.find(a => a.airport_id === airportId);\n      return airport ? airport.airport_name_zh : airportId;\n    },\n    \n    // 格式化時間\n    formatTime(date) {\n      const d = new Date(date);\n      return `${d.getHours().toString().padStart(2, '0')}:${d.getMinutes().toString().padStart(2, '0')}`;\n    },\n    \n    // 計算飛行時間\n    calculateDuration(departure, arrival) {\n      const dep = new Date(departure);\n      const arr = new Date(arrival);\n      const diffMs = arr - dep;\n      const diffMins = Math.floor(diffMs / 60000);\n      const hours = Math.floor(diffMins / 60);\n      const mins = diffMins % 60;\n      return `${hours}時${mins}分`;\n    },\n    \n    // 獲取航班狀態文字\n    getStatusText(status) {\n      const statusMap = {\n        'on_time': '準時',\n        'delayed': '延誤',\n        'cancelled': '取消',\n        'departed': '已起飛',\n        'arrived': '已抵達'\n      };\n      return statusMap[status] || status;\n    },\n    \n    // 獲取航班狀態樣式\n    getStatusClass(status) {\n      const classMap = {\n        'on_time': 'status-on-time',\n        'delayed': 'status-delayed',\n        'cancelled': 'status-cancelled',\n        'departed': 'status-departed',\n        'arrived': 'status-arrived'\n      };\n      return classMap[status] || '';\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 主容器樣式 */\n.flight-search-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: 'Noto Sans TC', sans-serif;\n  color: #333;\n}\n\n/* 頁頭樣式 */\n.flight-search-header {\n  margin-bottom: 2rem;\n  text-align: center;\n}\n\n.flight-search-header h1 {\n  font-size: 2.5rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n  color: #000;\n}\n\n.flight-search-header p {\n  font-size: 1.2rem;\n  color: #666;\n}\n\n/* 表單樣式 */\n.search-form {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1.5rem;\n  background-color: #fff;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  margin-bottom: 2rem;\n}\n\n.form-group {\n  flex: 1 1 200px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  color: #333;\n}\n\n.form-control {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  font-size: 1rem;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background-color: #f8f8f8;\n  transition: border-color 0.3s, box-shadow 0.3s;\n}\n\n.form-control:focus {\n  border-color: #000;\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n}\n\n.select-wrapper {\n  position: relative;\n}\n\n.select-wrapper:after {\n  content: '▼';\n  font-size: 0.8rem;\n  position: absolute;\n  right: 1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n  color: #666;\n}\n\n.search-button-container {\n  display: flex;\n  align-items: flex-end;\n}\n\n.search-button {\n  width: 100%;\n  padding: 0.85rem 1.5rem;\n  background-color: #000;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.search-button:hover {\n  background-color: #333;\n}\n\n.search-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n/* 搜尋結果樣式 */\n.search-results {\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  padding: 2rem;\n}\n\n.results-info {\n  margin-bottom: 1.5rem;\n}\n\n.results-info h2 {\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin-bottom: 0.5rem;\n  color: #000;\n}\n\n.results-info p {\n  color: #666;\n  margin-bottom: 1.5rem;\n}\n\n/* 載入中樣式 */\n.loading-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 3rem 0;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  border-top-color: #000;\n  animation: spin 1s ease-in-out infinite;\n  margin-bottom: 1rem;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n/* 無結果樣式 */\n.no-results {\n  text-align: center;\n  padding: 3rem 0;\n}\n\n.no-results p {\n  color: #666;\n  font-size: 1.1rem;\n}\n\n/* 航班卡片樣式 */\n.flight-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.flight-card {\n  background-color: #f8f8f8;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n}\n\n.flight-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background-color: #000;\n  color: #fff;\n}\n\n.airline-info {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.airline-logo {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n  border-radius: 50%;\n  padding: 3px;\n}\n\n.airline-logo img {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.airline-name {\n  font-weight: 600;\n}\n\n.flight-number {\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #ccc;\n}\n\n.flight-card-body {\n  padding: 1.5rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n}\n\n.flight-route {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  flex: 1;\n  min-width: 300px;\n}\n\n.departure, .arrival {\n  flex: 1;\n}\n\n.departure h3, .arrival h3 {\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin: 0;\n  color: #000;\n}\n\n.departure p, .arrival p {\n  margin: 0.2rem 0;\n  color: #666;\n}\n\n.airport-name {\n  font-size: 0.85rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 150px;\n}\n\n.flight-duration {\n  flex: 1;\n  text-align: center;\n  color: #666;\n  font-size: 0.9rem;\n  padding: 0 1rem;\n}\n\n.flight-line {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n\n.dot {\n  width: 8px;\n  height: 8px;\n  background-color: #000;\n  border-radius: 50%;\n}\n\n.line {\n  flex: 1;\n  height: 2px;\n  background-color: #000;\n  margin: 0 4px;\n}\n\n.flight-status {\n  padding: 0.35rem 0.75rem;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  font-weight: 600;\n  text-align: center;\n}\n\n.status-on-time {\n  background-color: #e6f7e6;\n  color: #2e7d32;\n}\n\n.status-delayed {\n  background-color: #fff3e0;\n  color: #e65100;\n}\n\n.status-cancelled {\n  background-color: #ffebee;\n  color: #c62828;\n}\n\n.status-departed {\n  background-color: #e3f2fd;\n  color: #1565c0;\n}\n\n.status-arrived {\n  background-color: #f3e5f5;\n  color: #6a1b9a;\n}\n\n.flight-card-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  border-top: 1px solid #eee;\n  background-color: #fff;\n}\n\n.flight-details {\n  color: #666;\n  font-size: 0.9rem;\n}\n\n.flight-details p {\n  margin: 0.2rem 0;\n}\n\n.booking-link {\n  display: inline-block;\n  padding: 0.5rem 1.5rem;\n  background-color: #000;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 0.9rem;\n  transition: background-color 0.3s;\n}\n\n.booking-link:hover {\n  background-color: #333;\n}\n\n/* 響應式設計 */\n@media (max-width: 768px) {\n  .flight-search-container {\n    padding: 1rem;\n  }\n  \n  .search-form {\n    padding: 1.5rem;\n  }\n  \n  .flight-card-body {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  \n  .flight-route {\n    margin-bottom: 1rem;\n  }\n  \n  .flight-card-footer {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .booking-link {\n    width: 100%;\n    text-align: center;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}