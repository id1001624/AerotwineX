{"ast":null,"code":"/**\n * 航班API服務\n * 處理與後端API的通信\n */\n\n// 基本API URL\nconst API_BASE_URL = '/api';\n\n/**\n * 獲取所有機場列表\n * @returns {Promise<Array>} 機場列表\n */\nexport async function getAirports() {\n  try {\n    // 調用後端API獲取機場列表\n    const response = await fetch(`${API_BASE_URL}/airports`);\n    if (!response.ok) {\n      throw new Error(`獲取機場資料失敗: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('獲取機場資料時出錯:', error);\n    return [];\n  }\n}\n\n/**\n * 獲取所有航空公司列表\n * @returns {Promise<Array>} 航空公司列表\n */\nexport async function getAirlines() {\n  try {\n    // 調用後端API獲取航空公司列表\n    const response = await fetch(`${API_BASE_URL}/airlines`);\n    if (!response.ok) {\n      throw new Error(`獲取航空公司資料失敗: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('獲取航空公司資料時出錯:', error);\n    return [];\n  }\n}\n\n/**\n * 獲取可用的直飛航線\n * @returns {Promise<Array>} 航線列表，包含出發地和目的地資訊\n */\nexport async function getAvailableRoutes() {\n  try {\n    // 調用後端API獲取可用的直飛航線\n    const response = await fetch(`${API_BASE_URL}/routes`);\n    if (!response.ok) {\n      throw new Error(`獲取航線資料失敗: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('獲取航線資料時出錯:', error);\n    // 返回空數組而不是拋出錯誤，以避免中斷應用程序流程\n    return [];\n  }\n}\n\n/**\n * 搜尋航班\n * @param {Object} params 搜尋參數\n * @param {string} params.departureAirport 出發機場代碼\n * @param {string} params.destinationAirport 目的地機場代碼\n * @param {string} params.date 日期 (YYYY-MM-DD)\n * @param {string} [params.airline] 航空公司ID (可選)\n * @returns {Promise<Array>} 航班列表\n */\nexport async function searchFlights(params) {\n  try {\n    // 參數驗證\n    if (!params.departureAirport || !params.destinationAirport || !params.date) {\n      throw new Error('缺少必要的搜尋參數');\n    }\n\n    // 構建查詢參數\n    const queryParams = new URLSearchParams({\n      departure: params.departureAirport,\n      arrival: params.destinationAirport,\n      date: params.date\n    });\n\n    // 添加可選參數\n    if (params.airline) {\n      queryParams.append('airline', params.airline);\n    }\n\n    // 調用後端API搜尋航班\n    const response = await fetch(`${API_BASE_URL}/flights/search?${queryParams}`);\n    if (!response.ok) {\n      throw new Error(`搜尋航班失敗: ${response.statusText}`);\n    }\n    const result = await response.json();\n\n    // 檢查API回應狀態\n    if (result.status === 'error') {\n      throw new Error(result.message || '搜尋航班失敗');\n    }\n\n    // 返回航班數據\n    return result.data || [];\n  } catch (error) {\n    console.error('搜尋航班時出錯:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_BASE_URL","getAirports","response","fetch","ok","Error","statusText","data","json","error","console","getAirlines","getAvailableRoutes","searchFlights","params","departureAirport","destinationAirport","date","queryParams","URLSearchParams","departure","arrival","airline","append","result","status","message"],"sources":["C:/Users/Aliothouo/OneDrive/文件/學校/AlphaVision/AerotwineX/frontend/src/services/api.js"],"sourcesContent":["/**\n * 航班API服務\n * 處理與後端API的通信\n */\n\n// 基本API URL\nconst API_BASE_URL = '/api';\n\n/**\n * 獲取所有機場列表\n * @returns {Promise<Array>} 機場列表\n */\nexport async function getAirports() {\n  try {\n    // 調用後端API獲取機場列表\n    const response = await fetch(`${API_BASE_URL}/airports`);\n    if (!response.ok) {\n      throw new Error(`獲取機場資料失敗: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('獲取機場資料時出錯:', error);\n    return [];\n  }\n}\n\n/**\n * 獲取所有航空公司列表\n * @returns {Promise<Array>} 航空公司列表\n */\nexport async function getAirlines() {\n  try {\n    // 調用後端API獲取航空公司列表\n    const response = await fetch(`${API_BASE_URL}/airlines`);\n    if (!response.ok) {\n      throw new Error(`獲取航空公司資料失敗: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('獲取航空公司資料時出錯:', error);\n    return [];\n  }\n}\n\n/**\n * 獲取可用的直飛航線\n * @returns {Promise<Array>} 航線列表，包含出發地和目的地資訊\n */\nexport async function getAvailableRoutes() {\n  try {\n    // 調用後端API獲取可用的直飛航線\n    const response = await fetch(`${API_BASE_URL}/routes`);\n    if (!response.ok) {\n      throw new Error(`獲取航線資料失敗: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('獲取航線資料時出錯:', error);\n    // 返回空數組而不是拋出錯誤，以避免中斷應用程序流程\n    return [];\n  }\n}\n\n/**\n * 搜尋航班\n * @param {Object} params 搜尋參數\n * @param {string} params.departureAirport 出發機場代碼\n * @param {string} params.destinationAirport 目的地機場代碼\n * @param {string} params.date 日期 (YYYY-MM-DD)\n * @param {string} [params.airline] 航空公司ID (可選)\n * @returns {Promise<Array>} 航班列表\n */\nexport async function searchFlights(params) {\n  try {\n    // 參數驗證\n    if (!params.departureAirport || !params.destinationAirport || !params.date) {\n      throw new Error('缺少必要的搜尋參數');\n    }\n    \n    // 構建查詢參數\n    const queryParams = new URLSearchParams({\n      departure: params.departureAirport,\n      arrival: params.destinationAirport,\n      date: params.date\n    });\n    \n    // 添加可選參數\n    if (params.airline) {\n      queryParams.append('airline', params.airline);\n    }\n    \n    // 調用後端API搜尋航班\n    const response = await fetch(`${API_BASE_URL}/flights/search?${queryParams}`);\n    if (!response.ok) {\n      throw new Error(`搜尋航班失敗: ${response.statusText}`);\n    }\n    \n    const result = await response.json();\n    \n    // 檢查API回應狀態\n    if (result.status === 'error') {\n      throw new Error(result.message || '搜尋航班失敗');\n    }\n    \n    // 返回航班數據\n    return result.data || [];\n  } catch (error) {\n    console.error('搜尋航班時出錯:', error);\n    throw error;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}