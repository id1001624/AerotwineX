{"ast":null,"code":"export default {\n  name: 'FlightCard',\n  props: {\n    flight: {\n      type: Object,\n      required: true,\n      default: () => ({\n        flight_number: '',\n        flight_status: 'scheduled',\n        scheduled_departure: new Date().toISOString(),\n        scheduled_arrival: new Date().toISOString(),\n        departure_airport_code: '',\n        arrival_airport_code: '',\n        aircraft_type: '',\n        price: 0,\n        booking_link: '#'\n      })\n    },\n    departureAirportName: {\n      type: String,\n      default: '未知機場'\n    },\n    arrivalAirportName: {\n      type: String,\n      default: '未知機場'\n    },\n    airlineName: {\n      type: String,\n      default: '未知航空公司'\n    }\n  },\n  computed: {\n    statusClass() {\n      const status = (this.flight.flight_status || 'scheduled').toLowerCase();\n      return {\n        'status-scheduled': status === 'scheduled',\n        'status-active': status === 'active',\n        'status-landed': status === 'landed',\n        'status-delayed': status === 'delayed',\n        'status-cancelled': status === 'cancelled'\n      };\n    }\n  },\n  methods: {\n    formatTime(dateTimeStr) {\n      if (!dateTimeStr) return '--:--';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (e) {\n        console.error('無效的日期格式:', dateTimeStr);\n        return '--:--';\n      }\n    },\n    formatDate(dateTimeStr) {\n      if (!dateTimeStr) return '--/--';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleDateString([], {\n          month: 'short',\n          day: 'numeric'\n        });\n      } catch (e) {\n        console.error('無效的日期格式:', dateTimeStr);\n        return '--/--';\n      }\n    },\n    calculateDuration(departureTimeStr, arrivalTimeStr) {\n      if (!departureTimeStr || !arrivalTimeStr) return '未知時間';\n      try {\n        const departureTime = new Date(departureTimeStr);\n        const arrivalTime = new Date(arrivalTimeStr);\n        const durationMs = arrivalTime - departureTime;\n        if (isNaN(durationMs) || durationMs < 0) return '未知時間';\n        const hours = Math.floor(durationMs / (1000 * 60 * 60));\n        const minutes = Math.floor(durationMs % (1000 * 60 * 60) / (1000 * 60));\n        return `${hours}小時 ${minutes}分鐘`;\n      } catch (e) {\n        console.error('計算航班時間錯誤:', e);\n        return '未知時間';\n      }\n    },\n    getStatusText(status) {\n      if (!status) return '未知狀態';\n      const statusMap = {\n        'scheduled': '已排程',\n        'active': '飛行中',\n        'landed': '已降落',\n        'delayed': '延誤',\n        'cancelled': '已取消'\n      };\n      return statusMap[status.toLowerCase()] || status;\n    },\n    formatPrice(price) {\n      if (price === undefined || price === null) return '0';\n      try {\n        return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      } catch (e) {\n        return '0';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","flight","type","Object","required","default","flight_number","flight_status","scheduled_departure","Date","toISOString","scheduled_arrival","departure_airport_code","arrival_airport_code","aircraft_type","price","booking_link","departureAirportName","String","arrivalAirportName","airlineName","computed","statusClass","status","toLowerCase","methods","formatTime","dateTimeStr","date","toLocaleTimeString","hour","minute","e","console","error","formatDate","toLocaleDateString","month","day","calculateDuration","departureTimeStr","arrivalTimeStr","departureTime","arrivalTime","durationMs","isNaN","hours","Math","floor","minutes","getStatusText","statusMap","formatPrice","undefined","toString","replace"],"sources":["C:\\Users\\Aliothouo\\OneDrive\\文件\\學校\\AlphaVision\\AerotwineX\\frontend\\src\\components\\FlightCard.vue"],"sourcesContent":["<template>\n  <div class=\"flight-card\">\n    <div class=\"flight-header\">\n      <div class=\"airline\">\n        <span class=\"airline-name\">{{ airlineName }}</span>\n        <span class=\"flight-number\">{{ flight.flight_number }}</span>\n      </div>\n      <div class=\"flight-status\" :class=\"statusClass\">\n        {{ getStatusText(flight.flight_status) }}\n      </div>\n    </div>\n    \n    <div class=\"flight-content\">\n      <div class=\"flight-route\">\n        <div class=\"departure\">\n          <div class=\"time\">{{ formatTime(flight.scheduled_departure) }}</div>\n          <div class=\"airport-code\">{{ flight.departure_airport_code }}</div>\n          <div class=\"airport-name\">{{ departureAirportName }}</div>\n          <div class=\"date\">{{ formatDate(flight.scheduled_departure) }}</div>\n        </div>\n        \n        <div class=\"flight-details\">\n          <div class=\"duration\">{{ calculateDuration(flight.scheduled_departure, flight.scheduled_arrival) }}</div>\n          <div class=\"direction-line\">\n            <div class=\"line\"></div>\n            <div class=\"plane-icon\">✈</div>\n          </div>\n          <div class=\"aircraft\">{{ flight.aircraft_type }}</div>\n        </div>\n        \n        <div class=\"arrival\">\n          <div class=\"time\">{{ formatTime(flight.scheduled_arrival) }}</div>\n          <div class=\"airport-code\">{{ flight.arrival_airport_code }}</div>\n          <div class=\"airport-name\">{{ arrivalAirportName }}</div>\n          <div class=\"date\">{{ formatDate(flight.scheduled_arrival) }}</div>\n        </div>\n      </div>\n      \n      <div class=\"flight-details-bottom\">\n        <div class=\"price\">\n          <span class=\"price-label\">票價</span>\n          <span class=\"price-amount\">NT${{ formatPrice(flight.price) }}</span>\n        </div>\n        \n        <a :href=\"flight.booking_link\" class=\"booking-button\">\n          預訂此航班\n        </a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FlightCard',\n  props: {\n    flight: {\n      type: Object,\n      required: true,\n      default: () => ({\n        flight_number: '',\n        flight_status: 'scheduled',\n        scheduled_departure: new Date().toISOString(),\n        scheduled_arrival: new Date().toISOString(),\n        departure_airport_code: '',\n        arrival_airport_code: '',\n        aircraft_type: '',\n        price: 0,\n        booking_link: '#'\n      })\n    },\n    departureAirportName: {\n      type: String,\n      default: '未知機場'\n    },\n    arrivalAirportName: {\n      type: String,\n      default: '未知機場'\n    },\n    airlineName: {\n      type: String,\n      default: '未知航空公司'\n    }\n  },\n  computed: {\n    statusClass() {\n      const status = (this.flight.flight_status || 'scheduled').toLowerCase();\n      return {\n        'status-scheduled': status === 'scheduled',\n        'status-active': status === 'active',\n        'status-landed': status === 'landed',\n        'status-delayed': status === 'delayed',\n        'status-cancelled': status === 'cancelled'\n      };\n    }\n  },\n  methods: {\n    formatTime(dateTimeStr) {\n      if (!dateTimeStr) return '--:--';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      } catch (e) {\n        console.error('無效的日期格式:', dateTimeStr);\n        return '--:--';\n      }\n    },\n    formatDate(dateTimeStr) {\n      if (!dateTimeStr) return '--/--';\n      try {\n        const date = new Date(dateTimeStr);\n        return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\n      } catch (e) {\n        console.error('無效的日期格式:', dateTimeStr);\n        return '--/--';\n      }\n    },\n    calculateDuration(departureTimeStr, arrivalTimeStr) {\n      if (!departureTimeStr || !arrivalTimeStr) return '未知時間';\n      try {\n        const departureTime = new Date(departureTimeStr);\n        const arrivalTime = new Date(arrivalTimeStr);\n        const durationMs = arrivalTime - departureTime;\n        \n        if (isNaN(durationMs) || durationMs < 0) return '未知時間';\n        \n        const hours = Math.floor(durationMs / (1000 * 60 * 60));\n        const minutes = Math.floor((durationMs % (1000 * 60 * 60)) / (1000 * 60));\n        \n        return `${hours}小時 ${minutes}分鐘`;\n      } catch (e) {\n        console.error('計算航班時間錯誤:', e);\n        return '未知時間';\n      }\n    },\n    getStatusText(status) {\n      if (!status) return '未知狀態';\n      \n      const statusMap = {\n        'scheduled': '已排程',\n        'active': '飛行中',\n        'landed': '已降落',\n        'delayed': '延誤',\n        'cancelled': '已取消'\n      };\n      \n      return statusMap[status.toLowerCase()] || status;\n    },\n    formatPrice(price) {\n      if (price === undefined || price === null) return '0';\n      try {\n        return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      } catch (e) {\n        return '0';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.flight-card {\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.flight-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);\n}\n\n.flight-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background-color: #f8f8f8;\n  border-bottom: 1px solid #eee;\n}\n\n.airline {\n  display: flex;\n  flex-direction: column;\n}\n\n.airline-name {\n  font-weight: bold;\n  font-size: 1rem;\n}\n\n.flight-number {\n  color: #777;\n  font-size: 0.9rem;\n}\n\n.flight-status {\n  padding: 0.3rem 0.8rem;\n  border-radius: 20px;\n  font-size: 0.8rem;\n  font-weight: 500;\n}\n\n.status-scheduled {\n  background-color: #e3f2fd;\n  color: #1976d2;\n}\n\n.status-active {\n  background-color: #e8f5e9;\n  color: #388e3c;\n}\n\n.status-landed {\n  background-color: #e8f5e9;\n  color: #388e3c;\n}\n\n.status-delayed {\n  background-color: #fff8e1;\n  color: #ffa000;\n}\n\n.status-cancelled {\n  background-color: #ffebee;\n  color: #d32f2f;\n}\n\n.flight-content {\n  padding: 1rem;\n}\n\n.flight-route {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1.5rem;\n}\n\n.departure, .arrival {\n  text-align: center;\n  flex: 1;\n}\n\n.time {\n  font-size: 1.5rem;\n  font-weight: 300;\n  margin-bottom: 0.2rem;\n}\n\n.airport-code {\n  font-weight: bold;\n  font-size: 1.2rem;\n  margin-bottom: 0.2rem;\n}\n\n.airport-name {\n  font-size: 0.85rem;\n  color: #555;\n  margin-bottom: 0.2rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.date {\n  font-size: 0.8rem;\n  color: #777;\n}\n\n.flight-details {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 2;\n}\n\n.duration {\n  text-align: center;\n  font-size: 0.85rem;\n  color: #555;\n  margin-bottom: 0.5rem;\n}\n\n.direction-line {\n  position: relative;\n  width: 80%;\n  margin: 0.5rem 0;\n}\n\n.line {\n  height: 1px;\n  background-color: #ddd;\n  width: 100%;\n}\n\n.plane-icon {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  padding: 0.2rem;\n  font-size: 1rem;\n  color: #555;\n}\n\n.aircraft {\n  font-size: 0.75rem;\n  color: #777;\n  margin-top: 0.5rem;\n}\n\n.flight-details-bottom {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  border-top: 1px solid #eee;\n}\n\n.price {\n  display: flex;\n  flex-direction: column;\n}\n\n.price-label {\n  font-size: 0.8rem;\n  color: #777;\n}\n\n.price-amount {\n  font-size: 1.3rem;\n  font-weight: bold;\n}\n\n.booking-button {\n  background-color: #333;\n  color: white;\n  padding: 0.7rem 1.2rem;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 0.9rem;\n  transition: background-color 0.3s;\n}\n\n.booking-button:hover {\n  background-color: #222;\n}\n\n@media (max-width: 768px) {\n  .flight-route {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .departure, .arrival {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    text-align: left;\n  }\n  \n  .departure > div, .arrival > div {\n    margin-right: 1rem;\n  }\n  \n  .flight-details {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n  \n  .direction-line {\n    transform: rotate(90deg);\n    width: 40%;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}